{
  "name": "@markpthomas/gis-ly-server",
  "version": "0.1.0",
  "description": "",
  "keywords": [],
  "homepage": "https://github.com/MarkPThomas/mark.ly#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MarkPThomas/mark.ly.git"
  },
  "author": "Mark P Thomas <MarkPorterThomas@gmail.com> (https://github.com/MarkPThomas)",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/MarkPThomas/mark.ly/issues"
  },
  "main": "../dist/server/index.js",
  "private": true,
  "scripts": {
    "build": "tsc --skipLibCheck --allowJs",
    "build:dev:client": "webpack --config webpack.client.config.js --node-env development",
    "build:prod:client": "webpack --config webpack.client.config.js --node-env production",
    "build:dev:server": "webpack --config webpack.server.config.js --node-env development",
    "build:dev:server:watch": "webpack -w --config webpack.server.config.js --node-env development",
    "build:prod:server": "webpack --config webpack.server.config.js --node-env production",
    "build:dev": " npm-run-all --parallel build:dev:server build:dev:client",
    "build:prod": " npm-run-all --parallel build:prod:server build:prod:client",
    "prestart:dev": "echo prestart script is running... && npm run build:dev",
    "prestart:prod": "echo prestart script is running... && npm run build:prod",
    "start:dev:client": "echo starting client... && webpack server --config webpack.client.config.js --node-env development",
    "start:prod:client": "echo starting client... && webpack server --config webpack.client.config.js --node-env production",
    "start:dev:server": "echo starting server... && nodemon --ignore dist --exec 'node dist/server/bundle.js'",
    "start:prod:server": "echo starting server... && node dist/server/bundle.js",
    "start:dev": "npm-run-all --parallel start:dev:server build:dev:server:watch start:dev:client sync:watch",
    "start:prod": "npm-run-all --parallel start:prod:server start:prod:client",
    "pretest": "echo prettest script is running... && npm run build:dev",
    "test": "cross-env NODE_ENV=test && jest --coverage --testResultsProcessor=jest-sonar-reporter",
    "test:updateSnapshot": "cross-env NODE_ENV=test && jest --updateSnapshot --coverage --testResultsProcessor=jest-sonar-reporter",
    "test:watch": "cross-env NODE_ENV=test && jest --watchAll --coverage --testResultsProcessor=jest-sonar-reporter",
    "test:results": "open-cli ./testResults/coverage/lcov-report/index.html",
    "test:u": "cross-env NODE_ENV=test node --expose-gc ./node_modules/.bin/jest --config jest.config.ts --runInBand --forceExit",
    "posttest": "echo posttest script is running... && npm-run-all clear:dev test:results",
    "sync:watch": "browser-sync start -p localhost:3000 -w -f ./dist",
    "publish": "npm publish --access public",
    "publish:dry": "npm publish --dry-run",
    "clear": "rimraf dist",
    "clear:build": "rimraf ./tsconfig.tsbuildinfo",
    "clear:dev": "npm-run-all clear clear:build",
    "docs": "typedoc --out docs --name Units",
    "docs:copy": "./bin/update-docs.sh",
    "docs:update": "npm run docs && npm run docs:copy"
  },
  "dependencies": {
    "@mapbox/geojson-rewind": "^0.5.2",
    "@markpthomas/common": "workspace:^",
    "@markpthomas/common-libraries": "workspace:^",
    "@markpthomas/geometry-csharp": "workspace:^",
    "@markpthomas/math": "workspace:^",
    "@react-leaflet/core": "^2.1.0",
    "@tmcw/togeojson": "^5.7.0",
    "axios": "^1.6.4",
    "classnames": "^2.5.1",
    "cors": "^2.8.5",
    "dotenv": "^16.0.1",
    "express": "^4.18.1",
    "express-validator": "^7.0.1",
    "geojson-to-kml": "^0.0.1",
    "leaflet": "^1.9.4",
    "npm-run-all": "^4.1.5",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-leaflet": "^4.2.1",
    "react-leaflet-custom-control": "^1.4.0",
    "styled-components": "^6.1.7",
    "togpx": "^0.5.4"
  },
  "devDependencies": {
    "@types/express": "^4.17.13",
    "@types/geojson": "^7946.0.10",
    "@types/jest": "^28.1.4",
    "@types/leaflet": "^1.9.3",
    "@types/node": "^18.0.3",
    "@types/react": "^18.0.15",
    "@types/react-dom": "^18.0.6",
    "@types/xmldom": "^0.1.31",
    "@typescript-eslint/parser": "^5.30.5",
    "browser-sync": "^2.27.10",
    "cross-env": "^7.0.3",
    "css-loader": "^6.7.1",
    "eslint": "^8.19.0",
    "eslint-plugin-react": "^7.30.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "jest": "^28.1.2",
    "jest-environment-jsdom": "^29.6.2",
    "jest-sonar-reporter": "^2.0.0",
    "mini-css-extract-plugin": "^2.6.1",
    "node-polyfill-webpack-plugin": "^2.0.0",
    "nodemon": "^2.0.19",
    "open-cli": "^7.0.1",
    "rimraf": "^3.0.2",
    "style-loader": "^3.3.1",
    "ts-jest": "^28.0.5",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.8.2",
    "ts-node-dev": "^2.0.0",
    "typedoc": "^0.25.7",
    "typescript": "^4.7.4",
    "typescript-plugin-css-modules": "^5.0.2",
    "webpack": "^5.73.0",
    "webpack-cli": "^4.10.0",
    "webpack-dev-server": "^4.9.3",
    "webpack-merge": "^5.8.0",
    "webpack-node-externals": "^3.0.0"
  },
  "jestSonar": {
    "sonar56x": true,
    "reportPath": "testResults",
    "reportFile": "sonar-report.xml",
    "indent": 4
  }
}
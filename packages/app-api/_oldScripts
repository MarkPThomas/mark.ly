
  // "scripts": {
  //   "build:dev:client": "webpack --config webpack.client.config.js --node-env development",
  //   "build:prod:client": "webpack --config webpack.client.config.js --node-env production",
  //   "build:dev:server": "webpack --config webpack.server.config.js --node-env development",
  //   "build:dev:server:watch": "webpack -w --config webpack.server.config.js --node-env development",
  //   "build:prod:server": "webpack --config webpack.server.config.js --node-env production",
  //   "build:dev": " npm-run-all --parallel build:dev:server build:dev:client",
  //   "build:prod": " npm-run-all --parallel build:prod:server build:prod:client",
  //   "prestart:dev": "echo prestart script is running... && npm run build:dev",
  //   "prestart:prod": "echo prestart script is running... && npm run build:prod",
  //   "start:dev:client": "echo starting client... && webpack server --config webpack.client.config.js --node-env development",
  //   "start:prod:client": "echo starting client... && webpack server --config webpack.client.config.js --node-env production",
  //   "start:dev:server": "echo starting server... && nodemon --ignore dist --exec 'node dist/server/bundle.js'",
  //   "start:prod:server": "echo starting server... && node dist/server/bundle.js",
  //   "start:dev:server:watch": "npm-run-all --parallel start:dev:server build:dev:server:watch",
  //   "start:dev:browserless": "npm-run-all --parallel start:dev:server build:dev:server:watch start:dev:client",
  //   "start:dev": "npm-run-all --parallel start:dev:server build:dev:server:watch start:dev:client sync:watch",
  //   "start:prod": "npm-run-all --parallel start:prod:server start:prod:client",
  //   "pretest": "echo prettest script is running... && npm run build:dev",
  //   "test": "cross-env NODE_ENV=test && jest --coverage --testResultsProcessor=jest-sonar-reporter",
  //   "test:updateSnapshot": "cross-env NODE_ENV=test && jest --updateSnapshot --coverage --testResultsProcessor=jest-sonar-reporter",
  //   "test:watch": "cross-env NODE_ENV=test && jest --watchAll --coverage --testResultsProcessor=jest-sonar-reporter",
  //   "test:results": "open-cli ./testResults/coverage/lcov-report/index.html",
  //   "posttest": "echo posttest script is running... && npm-run-all clear test:results",
  //   "sync:watch": "sleep 1 && browser-sync start -p localhost:3000 -w -f ./dist",
  //   "clear": "rimraf dist"
  // },